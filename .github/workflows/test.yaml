name: Tests stage - unit test for sniffs

on:
    pull_request:
        branches: [ master, develop ]
    push:
        branches: [ master ]

jobs:
    tests:
        name: Unit tests on PHP ${{ matrix.php-versions }} with PHPCS ${{ matrix.phpcs-versions }} and WPCS ${{ matrix.wpcs-versions }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php-versions: [ '5.4', '5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0' ]
                phpcs-versions: [ '3.5.0', 'dev-master' ]
                wpcs-versions: [ '2.3.0', 'dev-master', 'dev-develop']
                exclude:
                  - phpcs-versions: '3.5.0'
                    wpcs-versions: 'dev-develop'
                  - phpcs-versions: '3.5.0'
                    wpcs-versions: 'dev-master'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: '2.3.0'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: 'dev-develop'
                    php-versions: '5.4'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: 'dev-develop'
                    php-versions: '5.5'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: 'dev-develop'
                    php-versions: '5.6'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: 'dev-develop'
                    php-versions: '7.0'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: 'dev-develop'
                    php-versions: '7.1'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: 'dev-develop'
                    php-versions: '7.2'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: 'dev-develop'
                    php-versions: '7.3'
                  - phpcs-versions: 'dev-master'
                    wpcs-versions: 'dev-develop'
                    php-versions: '8.0'

        steps:
            # Checkout repository
            - name: Checkout
              uses: actions/checkout@v2

            # Setup PHP versions, run checks
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: ${{ matrix.php-versions }}
                tools: composer:v1
              env:
                COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Get composer cache directory
              id: composer-cache
              run: |
                echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v1
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: |
                  ${{ runner.os }}-composer-

            - name: Set the required PHPCS and WPCS versions
              env:
                PHPCS_BRANCH: ${{ matrix.phpcs-versions }}
                WPCS_BRANCH: ${{ matrix.wpcs-versions }}
              run: |
                if [[ ${WPCS_BRANCH} == "dev-develop" ]]; then composer config minimum-stability dev; fi
                composer require squizlabs/php_codesniffer:${PHPCS_BRANCH} wp-coding-standards/wpcs:${WPCS_BRANCH} --no-update --no-suggest --no-scripts
                composer install --no-suggest

            - name: Run tests
              run: composer run-tests
